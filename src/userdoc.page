---
title: Documentation for users
in_menu: true
sort_info: 2
---
This section provides information for Asmeta users and people interested in the Asmeta project.

## AsmetaL language

For information about the <strong>language</strong> we have derived from the metamodel, examples and a quick guide how to write specifications in this language, see:

* A [quick guide](/material/AsmetaL_quickguide.html) of the concrete notation
* A [more complete guide about the language](/material/AsmetaL_guide.pdf)
* The [EBNF](/material/AsmetaL_EBNF.html) grammar for the AsmM textual notation. It has been developed by means of the [Java Compiler Compiler (JavaCC)](https://javacc.dev.java.net/)
* The [railroad grammar](/material/AsmetaLRR.xhtml) generated by <https://www.bottlecaps.de/convert/> 

### AsmetaL examples

* Several examples of ASM specifications (mono agent and multi agents) can be found under github [here](https://github.com/asmeta/asmeta/tree/master/asm_examples)
* New models can be found also [here](https://github.com/asmeta/asmeta/tree/master/asmeta_models) 

### AsmetaL Standard Libraries

* **The AsmM Standard Library** A library of predefined ASM domains and functions: [StandardLibrary.asm](https://github.com/asmeta/asmeta/blob/master/asm_examples/STDL/StandardLibrary.asm) (you need this)
* **LTL and CTL Standard Libraries**: to be used together with the model checker to introduce TL properties: [LTLLibrary.asm](https://github.com/asmeta/asmeta/blob/master/asm_examples/STDL/LTLLibrary.asm) and [CTLLibrary.asm](https://github.com/asmeta/asmeta/blob/master/asm_examples/STDL/CTLLibrary.asm)
* **Time libraries**: to use time (*experimental*) in Asmeta specs: [TimeLibrary.asm](https://github.com/asmeta/asmeta/blob/master/asm_examples/STDL/TimeLibrary.asm) and the simplified version [TimeLibrarySimple](https://github.com/asmeta/asmeta/blob/master/asm_examples/STDL/TimeLibrarySimple.asm)

### Tutorial

We have a tutorial about the use of Asmeta, published at Formal Methods 2024:

<https://link.springer.com/content/pdf/10.1007/978-3-031-71177-0_28.pdf?pdf=inline%20link>

##### video:
 <video width="500" height="400" controls>
  <source src="https://foselab.unibg.it/asmeta/videos/ASMETA_Tutorial@FM24-2024.mp4" type="video/mp4">
  Your browser does not support the video tag.
 </video> 


## Asmeta Tools
<p>For information about the <strong>tools</strong> in the Asmeta tool set, how to use them see the <a href="../download/index.html">tools section</a>.</p>


## Asmeta Metamodel
<p>Our first idea have been laid down in a <a href="http://dx.doi.org/10.1007/978-3-540-24773-9_9">paper</a> presented at <a href="http://swt.informatik.uni-halle.de//ASM2004/">ASM'04</a>.
</p>
<p>A complete definition of the AsmM metamodel can be found
in:</p>
<blockquote>
  <div align="left"> A. Gargantini, E. Riccobene, and P. Scandurra. <em>Metamodelling a Formal Method: Applying MDE to Abstract State Machines</em>. Technical Report 97, DTI Dept., University of Milan, November 2006. [<a href="http://hdl.handle.net/2434/29854">link</a>]</div>
</blockquote>
<p>Here you find:</p>
<ul>
  <li>
    <p><strong>The AsmM Abstract Syntax </strong>(the metamodel)<br/>
    </p>
    <ul>
      <li>The <a href="https://github.com/asmeta/asmeta/tree/master/code/core/asmeta.emf/model">ecore</a> file for the AsmM
      </li>
      <li>(not yet in the metamodel, with some errors) The <a  href="https://github.com/asmeta/asmeta/blob/master/code/core/asmeta.emf/model/ocl.7z">OCL constraints</a>
      </li>
    </ul>
  </li>
</ul>
<p>From the AsmM we have derived the XMI format and the Java EMF libraries.<br/>
</p>
